name: Angular CI/CD

on:
  push:
    tags:
      - "prod-*"
      - "dev-*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check branch contains tag
        run: |
          branch=$(git branch -a --contains tags/${{ github.ref_name }} | grep feat/car-randomization)
          contains=$?

          echo "$contains "
          echo "$branch"
          echo "BRANCH=$contains" >> $GITHUB_ENV
                
          if [[ $contains != 0 ]]; then 
            echo "Not Main Branch"
            exit 1
          fi

      - name: Determine build configuration from tag
        run: |
          TAG_NAME="${{ github.ref_name }}"  # Get the tag name
          if [[ "$TAG_NAME" == prod-* ]]; then
            echo "BUILD_ENV=production" >> $GITHUB_ENV
          else
            echo "BUILD_ENV=development" >> $GITHUB_ENV
          fi
          echo "Selected Build Environment: $BUILD_ENV"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm i --legacy-peer-deps

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: npm-cache-${{ hashFiles('package-lock.json') }}

      - name: Build Angular app
        run: npm run build -- --configuration=${{ env.BUILD_ENV }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/carly-revamp-spa/

  deploy-dev:
    needs: build
    if: startsWith(github.ref_name, 'dev-') 
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/

      - name: Deploy to Development Server
        run: |
          echo "ðŸš€ Deploying to Development Server"
          # Example deployment command (replace with actual command)
          # scp -r dist/* user@dev-server:/var/www/html

  deploy-prod:
    needs: build
    if: startsWith(github.ref_name, 'prod-') # Run only for prod tags
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/

      - name: Deploy to Production Server
        run: |
          echo "ðŸš€ Deploying to Production Server"
          # Example deployment command (replace with actual command)
          # scp -r dist/* user@prod-server:/var/www/html
