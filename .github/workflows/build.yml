name: Angular CI/CD

on:
  push:
    tags:
      - "prod-*"
      - "dev-*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Print GitHub Context Variables
        run: |
          echo "github.ref: $GITHUB_REF"
          echo "github.ref_name: $GITHUB_REF_NAME"
          echo "github.base_ref: $GITHUB_BASE_REF"
          echo "github.event_name: $GITHUB_EVENT_NAME"
          echo "github.head_ref: $GITHUB_HEAD_REF"
          echo "github.event.base_ref: $GITHUB_EVENT_BASE_REF"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: get branch name
        run: |
          echo "hereee ... "
          branch=$(git branch  -a --contains tags/${{ github.ref_name }} | grep main)
          contains=$?
          echo "$contains "
          echo "$branch"

          if [[ $contains != 0 ]]; then 
            echo "Not main branch"
            exit -1
            fi

      - name: Determine Build Configuration from Tag
        id: set_build_env
        run: |
          TAG_NAME="${{ github.ref_name }}"  # Get the tag name
          if [[ "$TAG_NAME" == prod-* ]]; then
            echo "BUILD_ENV=production" >> $GITHUB_ENV
          else
            echo "BUILD_ENV=development" >> $GITHUB_ENV
          fi
          echo "Selected Build Environment: $BUILD_ENV"

      - name: Print GitHub Context Variables
        run: |
          echo "github.ref: $GITHUB_REF"
          echo "github.ref_name: $GITHUB_REF_NAME"
          echo "github.base_ref: $GITHUB_BASE_REF"
          echo "github.event_name: $GITHUB_EVENT_NAME"
          echo "github.head_ref: $GITHUB_HEAD_REF"
          echo "github.event.base_ref: $GITHUB_EVENT_BASE_REF"

      - name: get status
        run: git status

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm i --legacy-peer-deps

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: npm-cache-${{ hashFiles('package-lock.json') }}

      - name: Build Angular app
        run: npm run build -- --configuration=${{ env.BUILD_ENV }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/
